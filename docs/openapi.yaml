openapi: 3.0.1
info:
  title: test Search API仕様書
  description: |
    test Search APIの仕様をOpenAPI 3にしたがって記述したドキュメント。
  version: v1.0
servers:
  - url: 'https://api.dev.test-search.jp/v1'
    description: 開発環境へアクセスするためのURL
  - url: 'http://localhost:3000/v1'
    description: ローカル開発環境へアクセスするためのURL
tags:
  - name: auth
    description: ユーザー向けAPI
  - name: users/user
    description: ユーザー管理に関するAPI
  - name: companies/search
    description: 企業検索に関するAPI
  - name: companies
    description: 企業に関するAPI
components:
  securitySchemes:
    userAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 一般ユーザーのJWTによる認証
paths:
  /auth/login:
    post:
      summary: ユーザーの認証
      description: |
        メールアドレス、パスワードによるユーザーの認証を行なう
      tags:
        - auth
      requestBody:
        description: ユーザー情報
        required: true
        content:
          application/json:
            schema:
              required:
                - auth
              properties:
                auth:
                  required:
                    - email
                    - password
                  type: object
                  properties:
                    email:
                      type: string
                      description: メールアドレス
                      format: email
                      example: user@example.com
                    password:
                      type: string
                      description: パスワード
                      format: password
                      example: Password1
      responses:
        '201':
          description: |
            メールアドレス、パスワードによる認証成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                    description: Json Web Token
        '404':
          description: |
            メールアドレスとパスワードが一致するユーザーが存在しない
        '422':
          description: |
            バリデーションエラー
  /auth/register:
    post:
      summary: ユーザーの認証
      description: |
        メールアドレス、パスワードによるユーザーの認証を行なう
      tags:
        - auth
      requestBody:
        description: ユーザー情報
        required: true
        content:
          application/json:
            schema:
              required:
                - auth
              properties:
                auth:
                  required:
                    - first_name
                    - last_name
                    - email
                    - password
                    - password_cinfirmation
                  type: object
                  properties:
                    first_name:
                      type: string
                      description: ユーザー名（名）
                    last_name:
                      type: string
                      description: ユーザー名（姓）
                    email:
                      type: string
                      description: メールアドレス
                      format: email
                      example: user@example.com
                    password:
                      type: string
                      description: パスワード
                      format: password
                      example: Password1
                    password_confirmation:
                      type: string
                      description: パスワード確認用
                      format: password
                      example: Password1
      responses:
        '200':
          description: |
            メールアドレス、パスワードによる登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                    description: Json Web Token
        '422':
          description: |
            必要なパラメータが内などの不正なリクエスト
  /auth/request_reset_password:
    post:
      summary: ユーザーのパスワードリセットリクエスト
      description: |
        メールアドレスによるユーザーのパスワードリセットリクエストを行なう
      tags:
        - auth
      requestBody:
        description: ユーザー情報
        required: true
        content:
          application/json:
            schema:
              required:
                - auth
              properties:
                auth:
                  required:
                    - email
                  type: object
                  properties:
                    email:
                      type: string
                      description: メールアドレス
                      format: email
                      example: user@example.com
      responses:
        '200':
          description: |
            メールアドレスによるリセットリクエスト成功（メール送信完了）
        '422':
          description: |
            必要なパラメータが内などの不正なリクエスト または 指定のメールアドレスが存在しない
  /auth/reset_password:
    post:
      summary: ユーザーのパスワードリセット
      description: |
        メールアドレスによるユーザーのパスワードリセットを行なう
      tags:
        - auth
      requestBody:
        description: ユーザー情報
        required: true
        content:
          application/json:
            schema:
              required:
                - auth
              properties:
                auth:
                  required:
                    - password
                    - password_confirmation
                    - token
                  type: object
                  properties:
                    password:
                      type: string
                      description: パスワード
                      format: password
                      example: Password1
                    password_confirmation:
                      type: string
                      description: パスワード確認用
                      format: password
                      example: Password1
                    token:
                      type: string
                      description: パスワードリセットトークン
      responses:
        '200':
          description: |
            パスワードリセット成功
        '422':
          description: |
            必要なパラメータが内などの不正なリクエスト または トークンの期限切れ
  /users/info:
    get:
      summary: ユーザー情報取得
      description: |
        ログイン中のユーザーの情報を取得する

        ユーザーの課金状態、プロフィール情報などが含まれる
      tags:
        - users/user
      security:
        - userAuth: []
      responses:
        '200':
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ユーザーID
                  email:
                    type: string
                    description: メールアドレス
                    format: email
                  first_name:
                    type: string
                    description: ユーザー名（名）
                  last_name:
                    type: string
                    description: ユーザー名（姓）
                  is_charged:
                    type: integer
                    description: '課金状態 0：無課金, 1：課金'
        '401':
          description: |
            認証エラー

            JWTが不正または存在しないなど
        '403':
          description: |
            アクセス禁止

            ユーザーが利用不可の場合
  /users/update_profile:
    patch:
      summary: ユーザープロフィール更新
      description: |
        ユーザーのプロフィールを更新する

        プロフィール更新はJWTによって認証中のユーザー自身に対して行なわれる
      tags:
        - users/user
      security:
        - userAuth: []
      requestBody:
        description: ユーザー情報
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      description: |
                        メールアドレス

                        すでに登録されているメールアドレスは使用できません
                      format: email
                      example: user@example.com
                    first_name:
                      type: string
                      description: ユーザー名（名）
                      example: 太郎
                    last_name:
                      type: string
                      description: ユーザー名（姓）
                      example: 山田
      responses:
        '200':
          description: |
            ユーザープロフィール更新成功
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    description: ユーザーID
                  email:
                    type: string
                    format: email
                    description: メールアドレス
                  first_name:
                    type: string
                    description: ユーザー名（名）
                  last_name:
                    type: string
                    description: ユーザー名（姓）
                  is_manager:
                    type: boolean
                    description: >
                      企業管理者フラグ


                      デフォルトはfalse（一般ユーザー）だが、true（企業管理者）とすることでユーザーの管理などを行なう権限を付与できる
                  is_available:
                    type: boolean
                    description: |
                      利用可否フラグ

                      デフォルトはtrue（利用可能）だが、false（利用不可）とすることでユーザー単位の利用停止ができる
                  shops:
                    type: array
                    description: 所属店舗情報
                    items:
                      properties:
                        id:
                          type: integer
                          description: 店舗ID
                        name:
                          type: string
                          description: 店舗名
                        label:
                          type: string
                          description: 店舗識別用ラベル
        '401':
          description: |
            認証エラー

            JWTが不正または存在しないなど
        '403':
          description: |
            アクセス禁止

            企業またはユーザーが利用不可
        '422':
          description: |
            バリデーションエラーなど処理できない情報が送信された場合

            詳細はレスポンスのエラーメッセージを参照
  /users/update_password:
    patch:
      summary: 企業ユーザーパスワード更新
      description: |
        企業ユーザーのパスワードを更新する

        パスワード更新はJWTによって認証中のユーザー自身に対して行なわれる
      tags:
        - users/user
      security:
        - userAuth: []
      requestBody:
        description: 企業ユーザー情報
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  required:
                    - current_password
                    - password
                    - password_confirmation
                  type: object
                  properties:
                    current_password:
                      type: string
                      description: 現在のパスワード
                      example: Password1
                    password:
                      type: string
                      description: |
                        新しいパスワード

                        要件：長さが8文字以上100文字以下であること、大文字・小文字・数字がそれぞれ少なくとも1つ含まれること
                      example: Password1
                    password_confirmation:
                      type: string
                      description: |
                        パスワード確認用文字列

                        要件：新しいパスワードと一致すること
                      example: Password1
      responses:
        '200':
          description: |
            パスワード更新成功
        '401':
          description: |
            認証エラー

            JWTが不正または存在しないなど
        '403':
          description: |
            アクセス禁止

            企業またはユーザーが利用不可
        '422':
          description: |
            バリデーションエラーなど処理できない情報が送信された場合

            詳細はレスポンスのエラーメッセージを参照
  /companies/search:
    get:
      summary: 企業一覧検索
      description: |
        事業に関する情報を検索し紐づく企業一覧を取得する
      tags:
        - companies/search
      security:
        - userAuth: []
      parameters:
        - in: query
          name: page
          description: |
            ページネーションの開始位置

            データを最初から取得する場合は1とする（省略した場合は1が設定されたとみなす）
          required: false
          schema:
            type: integer
        - in: query
          name: per_page
          description: |
            1回のリクエストあたりの取得件数

            省略した場合は10件（最大50件まで設定可能）
          required: false
          schema:
            type: integer
        - in: query
          name: content_keywords
          description: |
            事業に関するキーワード（カンマ区切りで複数設定可能）
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 企業一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    companyId:
                      type: integer
                      description: 企業ID
                    name:
                      type: string
                      description: 企業名
                    address:
                      type: object
                      description: 企業住所情報
                      properties:
                        postal_code:
                          type: string
                          description: 郵便番号
                        prefecture:
                          type: string
                          description: 都道府県
                        address1:
                          type: string
                          description: 市区町村
                        address2:
                          type: string
                          description: 丁目番地
                        address3:
                          type: string
                          description: 建物情報等
                        phone_number:
                          type: string
                          description: 電話番号
                    contents:
                      type: object
                      description: 事業情報
                      properties:
                        content:
                          type: string
                          description: 事業内容テキスト
          headers:
            Link:
              schema:
                type: string
              description: >
                ページネーションで参照可能なリンク

                次のページを取得するnext、最後のページを取得するlast、最初のページを取得するfirst、前のページを取得するprevがそれぞれ存在する場合のみ含まれる

                参考リンク

                https://github.com/davidcelis/api-pagination

                https://developer.github.com/v3/#pagination
            Per-Page:
              schema:
                type: integer
              description: 1回のリクエストあたりの件数
            Total:
              schema:
                type: integer
              description: レコードの総数（企業に登録されている店舗の数）
        '401':
          description: |
            認証エラー

            JWTが不正または存在しないなど
        '403':
          description: |
            アクセス禁止

            企業またはユーザーが利用不可
        '404':
          description: |
            該当企業なし
  '/companies/{companyId}':
    get:
      summary: 企業情報取得
      description: |
        企業の詳細情報を取得
      tags:
        - companies
      security:
        - userAuth: []
      parameters:
        - in: path
          name: companyId
          description: 企業ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 企業情報
          content:
            application/json: null
            schema:
              type: object
              description: 企業情報
              properties:
                companyId:
                  type: integer
                  description: 企業ID
                name:
                  type: string
                  description: 企業名
                address:
                  type: object
                  description: 企業住所情報
                  properties:
                    postal_code:
                      type: string
                      description: 郵便番号
                    prefecture:
                      type: string
                      description: 都道府県
                    address1:
                      type: string
                      description: 市区町村
                    address2:
                      type: string
                      description: 丁目番地
                    address3:
                      type: string
                      description: 建物情報等
                    phone_number:
                      type: string
                      description: 電話番号
                contents:
                  type: object
                  description: 事業情報
                  properties:
                    content:
                      type: string
                      description: 事業内容テキスト
        '401':
          description: |
            認証エラー

            JWTが不正または存在しないなど
        '403':
          description: |
            アクセス禁止

            ユーザーが利用不可
        '404':
          description: |
            企業IDが存在しない場合
